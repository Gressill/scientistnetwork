<?xml version="1.0" encoding="utf-8"?>

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"  
			   xmlns:services="services.*"
			   initialize="application_initializeHandler(event)"
			   applicationComplete="application_CompleteHandler(event)"
			   pageTitle="Power law" xmlns:valueObjects="valueObjects.*">
	<s:layout>
		<s:TileLayout/>
	</s:layout>
	<s:states>
		<s:State name="degree"/>
		<s:State name="chartable"/>
	</s:states>
	<fx:Declarations>
		<services:ScientistSrv id="scientistSrv" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true">
			
			<services:channelSet>
				<s:ChannelSet>
					<s:AMFChannel uri="/ScientificServer/messagebroker/amf"/>
				</s:ChannelSet>
			</services:channelSet>
			
		</services:ScientistSrv>
		
		<s:CallResponder id="degreeCloud" result="degreeCloud_resultHandler(event)"/>
		<valueObjects:Relations id="relations"/>
		
		<!-- Define custom colors for use as plot point fills. -->
		<mx:SolidColor id="sc1" color="blue" alpha=".3"/>
		
		<!-- Define custom SolidColorStrokes. -->
		<mx:SolidColorStroke id="s1" color="blue" weight="1"/>
		<mx:SolidColorStroke id="s2" color="red" weight="1"/>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.Graphics;
			import flash.geom.*;
			
			import iil.flex.component.Bubbles;
			import iil.flex.component.Bubbles2;
			import iil.flex.component.HexCylinder;
			import iil.flex.config.Constant;
			import iil.flex.relation.Cloud;
			import iil.flex.relation.MainStage;
			import iil.flex.relation.RotateY;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.core.*;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import valueObjects.Relations;
			
			public var myRelation:MainStage;
			public var userName:String=null;
			
			private var authorArray:ArrayCollection = new ArrayCollection();
			
			/**
			 * 画出舞台 
			 */
			public function draw():void {
				var ui:UIComponent =new UIComponent(); //flex 中没有UIcomponent将无法显示		
				
				//				var test:Bubbles = new Bubbles(this.stage.stageWidth,this.stage.stageHeight);
				//				var test:RotateY = new RotateY(600,400);
//				var test:Cloud = new Cloud(Constant.SCREEN_WIDTH,Constant.SCREEN_HEIGHT,authorArray);
//				ui.addChild(test);
				//				myRelation = new MainStage(null,parent.width); 
				//				ui.addChild(myRelation);
				this.addElement(ui);//UI添加到舞台
				
			}
			
			/**
			 * 返回合作者云
			 */
			protected function degreeCloud_resultHandler(event:ResultEvent):void {
				trace("handle");
				var tempArray:ArrayCollection=event.result as ArrayCollection;
//				for each(var k in tempArray){
////					trace("k is : "+ k);
//				}
				for(var i:int = 0; i < tempArray.length; i=i+2){
//					trace("asdas "+ tempArray.getItemAt(i));
					var tempObj:Object = {};//{ Month: "Jan", Profit: 2000, Expenses: 1500, Amount: 450 },
					tempObj.x = tempArray.getItemAt(i);
					tempObj.y = tempArray.getItemAt(i+1);
//					trace("tempObj.x is : "+ tempObj.x);
//					trace("tempObj.y is : "+ tempObj.y);
//					trace("tempObj is "+tempObj);
					authorArray.addItem(tempObj);
				}
				draw();
			}
			
			public function getCloud():void{
				trace("get");
				degreeCloud.token = scientistSrv.getPowerLawDestribution("Jie Ren");
				//				degreeCloud.addEventListener(ResultEvent.RESULT,degreeCloud_resultHandler);
			}
			
			protected function application_initializeHandler(event:FlexEvent):void	{
				getCloud();
				//draw();				
			}
			
			protected function application_CompleteHandler(event:FlexEvent):void {
				//trace("applicationComplete:" + this.stage.stageWidth);
				Constant.SCREEN_WIDTH = this.stage.stageWidth;
				Constant.SCREEN_HEIGHT = this.stage.stageHeight;
				this.setStyle("backgroundColor",Constant.STAGE_BACKGROUND_COLOR);
				//				draw();
			}
			
		]]>
	</fx:Script>
	<s:Panel title="Plot Chart with custom fills">
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		
		<mx:PlotChart id="plChart" 
					  dataProvider="{authorArray}"
					  showDataTips="true"
					  width="100%"
					  height="100%">
			<mx:series>
				<mx:PlotSeries
					xField="x"
					yField="y"
					displayName="author/paper"
					fill="{sc1}"
					stroke="{s1}"/>
			</mx:series>
		</mx:PlotChart>
		<mx:Legend dataProvider="{plChart}"/>
		
		<mx:PlotChart id="plLnChart" 
					  dataProvider="{authorArray}"
					  showDataTips="true"
					   width="100%"
					    height="100%">
			<mx:verticalAxis>
				<mx:LogAxis interval="10"/>
			</mx:verticalAxis>
			<mx:horizontalAxis>
				<mx:LogAxis interval="10"/>
			</mx:horizontalAxis>
			<mx:series>
				<mx:PlotSeries
					xField="x"
					yField="y"
					displayName="author/paper"
					fill="{sc1}"
					stroke="{s1}"/>
			</mx:series>
		</mx:PlotChart>
		<mx:Legend dataProvider="{plLnChart}"/>
	</s:Panel>
</s:Application>
